<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find robotic_arm)/worlds/robotic_arm.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find robotic_arm)/urdf/robotic_arm.xacro'"/>
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model robotic_arm -param robot_description"/>


  <include file="$(find robotic_arm)/launch/controller_utils.launch"/>
  <rosparam file="$(find robotic_arm)/config/ros_controllers.yaml" command="load"/>
  <node name="arm_position_controller" pkg="controller_manager" type="controller_manager" args="spawn arm_position_controller --timeout 50" respawn="false" output="screen" />

  <!-- Remap follow_joint_trajectory -->
  <remap if="$(arg sim)" from="/follow_joint_trajectory" to="/arm_position_controller/follow_joint_trajectory"/>

  <!-- Launch moveit -->
  <include file="$(find robotic_arm_moveit)/launch/move_group.launch">
<!--    <arg name="limited" default="$(arg limited)"/>-->
<!--    <arg name="debug" default="$(arg debug)" />-->
  </include>



</launch>